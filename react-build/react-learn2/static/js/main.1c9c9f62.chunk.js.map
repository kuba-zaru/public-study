{"version":3,"sources":["components/MaterialUi/R010Main.js","components/MaterialUi/R020Main.js","components/MaterialUi/R030Main.js","components/MaterialUi/R031Main.js","components/MaterialUi/R032Main.js","components/MaterialUi/R040Main.js","components/MaterialUi/R041Main.js","components/MaterialUi/R042Main.js","components/MaterialUi/R043Main.js","components/MaterialUi/R045Main.js","components/MaterialUi/TemporaryDrawer.js","components/MaterialUi/R050Main.js","components/MaterialUi/R051Main.js","components/MaterialUi/R052Main.js","components/MaterialUi/R053Main.js","components/MaterialUi/R054Main.js","components/MaterialUi/R060Table.js","context/ApiMBContext.js","components/R100MsgBoard/GoodBtn.js","components/R100MsgBoard/MsgItem.js","components/R100MsgBoard/MsgList.js","utils/utils.js","components/R100MsgBoard/MsgInputField.js","components/R100MsgBoard/R100MBMain.js","components/R110ReactTutorial/index.js","components/R110ReactTutorial/R110Main.jsx","components/R111ReactTutorial/index.js","components/R111ReactTutorial/R111Main.jsx","components/MaterialUi/R061Table.js","components/MaterialUi/R062Table.js","components/MaterialUi/R063Table.js","components/MaterialUi/R070Modal.js","components/MaterialUi/R071Modal.js","components/MaterialUi/R072Modal.js","components/MaterialUi/R033Grid.js","components/MaterialUi/R034Grid.js","components/MaterialUi/R035Grid.js","components/MaterialUi/R080GridList.js","components/MaterialUi/R081GridList.js","components/MaterialUi/R082GridList.js","components/MaterialUi/R083GridList.js","components/MaterialUi/R084GridListLocalStrage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","margin","spacing","webButton","textTransform","input","display","R010Main","classes","Container","maxWidth","className","Box","component","m","Button","variant","disableElevation","color","onClick","alert","accept","id","multiple","type","htmlFor","size","href","IconButton","aria-label","button","startIcon","R020Main","Typography","style","backgroundColor","height","fixed","R030Main","Grid","container","item","xs","Paper","paper","sm","parent","cell_1","width","cell_2","cell_3","R031Main","justify","alignItems","direction","border","parent2","parent3","R032Main","list","fullList","R040Main","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","key","clsx","role","onKeyDown","List","map","text","index","ListItem","ListItemIcon","ListItemText","primary","Divider","Fragment","Drawer","onClose","menuButton","marginRight","title","flexGrow","R041Main","AppBar","position","Toolbar","edge","root","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","in","R042Main","CssBaseline","R043Main","console","log","R045Main","anchorEl","setAnchorEl","handleClose","currentTarget","keepMounted","Boolean","MenuItem","TemporaryDrawer","R050Main","checkedA","checkedB","handleChange","name","checked","Switch","onChange","inputProps","TextField","label","placeholder","required","disabled","defaultValue","error","helperText","multiline","rows","good_btn","padding","fontWeight","icon_pink","StyledBadge","withStyles","badge","palette","background","Badge","R051Main","Fab","extendedIcon","badgeContent","minWidth","uname","R052Main","R053Main","good","setGood","fullWidth","thread_title","borderRadius","paddingLeft","msgs_list","msg_title","marginTop","marginBottom","input_panel","paddingRight","footer_container","R054Main","handleGoodClick","table","createData","calories","fat","carbs","protein","R060Table","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","ApiMBContext","createContext","MsgBoardContextProvider","testCount","setTestCount","msgs","setMsgs","useEffect","apiGetMsgs","a","axios","get","headers","res","data","apiGetMsgOne","apiPostMsg","post","response","status","statusText","request","message","config","apiPutMsg","put","_mitem","idx","Provider","value","addTestCount","_cnt","GoodBtn","useContext","msg","MsgItem","date","substring","MsgList","getFormatTime","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","getMilliseconds","MsgInputField","msgInput","setMsgInput","Math","random","toString","utils","R100MBMain","Square","handleClick","Board","i","this","squares","renderSquare","Component","Game","history","Array","fill","stepNumber","xIsNext","length","calculateWinner","concat","step","current","winner","moves","move","desc","jumpto","txtStatus","lines","b","c","R110Main","R111Main","R061Table","dense","setDense","e","handleDense","R062Table","dence","setDence","handleDence","tbody","cell","cellAuth","whiteSpace","overflow","textOverflow","author","memo","R063Table","rand","round","getModalStyle","transform","boxShadow","shadows","R070Modal","modalStyle","setOpen","body","Modal","aria-labelledby","aria-describedby","R071Modal","R072Modal","marginLeft","btnBookAdd","R033Grid","R034Grid","bookRows","header","h02","bookPaper","LightTooltip","tooltip","common","white","fontSize","Tooltip","R035Grid","elevation","placement","flexWrap","justifyContent","gridList","icon","R080GridList","tileData","EBData","items","volumeInfo","authors","join","img","imageLinks","smallThumbnail","GridList","cellHeight","GridListTile","cols","ListSubheader","tile","src","alt","GridListTileBar","subtitle","actionIcon","R081GridList","bookList","SearchOutlined","AddCircleOutline","R082GridList","searchJSX","bookListJSX","bodyJSX","R083GridList","sWord","setSWord","books","setBooks","searchExec","maxResults","url","conditions","push","buildSearchUrl","fetch","then","json","extractBooks","catch","err","handleTitle","handleAuthor","R084GridListLocalStrage","sessionStrageList","setSessionStrageList","R084SessionStrageKey","sessionStrageListJSX","newList","handleAddBook","sessionStorage","getItem","JSON","parse","setItem","stringify","App","scrId","setScrId","btnState","setBtnState","scrName","classNames","chgScr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9c9f62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Box, Button } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n// material-ui\r\n// button\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  webButton: {\r\n    textTransform: \"none\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R010Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"sm\" className=\"bg-c-lightyellow\">\r\n        {/* <p>R010Main.js</p> */}\r\n        <Box component=\"span\" m={1}>\r\n          <Button variant=\"contained\">Default</Button>\r\n        </Box>\r\n        <Box component=\"span\" m={1}>\r\n          <Button variant=\"contained\" disableElevation>\r\n            シャドウ無し\r\n          </Button>\r\n        </Box>\r\n\r\n        <hr />\r\n\r\n        <Box component=\"span\" m={1}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            primary\r\n          </Button>\r\n        </Box>\r\n        <Box component=\"span\" m={1}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.webButton}\r\n          >\r\n            primary 小文字アルファベット\r\n          </Button>\r\n        </Box>\r\n\r\n        <hr />\r\n\r\n        <p className=\"m22\">outline、イベントハンドラ</p>\r\n        <Button variant=\"outlined\">Outlined</Button>\r\n        <Button\r\n          onClick={() => {\r\n            alert(\"clicked\");\r\n          }}\r\n        >\r\n          クリックして!\r\n        </Button>\r\n\r\n        <hr />\r\n\r\n        <p className=\"m22\">uploadボタンはhtmlのinputタグと連動させる</p>\r\n        <input\r\n          accept=\"image/*\"\r\n          className={classes.input}\r\n          id=\"contained-button-file\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n            Upload\r\n          </Button>\r\n        </label>\r\n\r\n        <hr />\r\n\r\n        <p className=\"m22\">大きさ</p>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          className={classes.margin}\r\n        >\r\n          Small\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          className={classes.margin}\r\n        >\r\n          Medium\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.margin}\r\n        >\r\n          Large\r\n        </Button>\r\n\r\n        <hr />\r\n\r\n        <p className=\"m22\">linkはaタグと同じ機能</p>\r\n        <Button color=\"primary\">text button</Button>\r\n        <Button href=\"#text-buttons\" color=\"primary\">\r\n          Link\r\n        </Button>\r\n\r\n        <hr />\r\n\r\n        <p className=\"m22\">アイコン</p>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon /> 削除\r\n        </IconButton>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <hr />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R010Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// material-ui\r\n// container\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  webButton: {\r\n    textTransform: \"none\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R020Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography\r\n          component=\"div\"\r\n          style={{ backgroundColor: \"#cfe8fc\", height: \"30vh\" }}\r\n        >\r\n          maxWidth=\"sm\"\r\n          <br />\r\n          <br />\r\n          xs, extra-small: 0px\r\n          <br />\r\n          sm, small: 600px\r\n          <br />\r\n          md, medium: 960px\r\n          <br />\r\n          lg, large: 1280px\r\n          <br />\r\n          xl, extra-large: 1920px\r\n        </Typography>\r\n        <hr />\r\n      </Container>\r\n      <Container fixed>\r\n        <Typography\r\n          component=\"div\"\r\n          style={{ backgroundColor: \"#cfe8fc\", height: \"20vh\" }}\r\n        >\r\n          fixed ブレークポイントで広がる\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R020Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// material-ui\r\n// gried layout\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  webButton: {\r\n    textTransform: \"none\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R030Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        <p className=\"m22\">Grid Normal</p>\r\n        <Grid container>\r\n          <Grid item xs={6} className=\"bg-c-sky\">\r\n            xs=6\r\n          </Grid>\r\n          <Grid item xs={6} className=\"bg-c-pink\">\r\n            xs=6\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n        <Grid container>\r\n          <Grid item xs={3} className=\"bg-c-sky\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={3} className=\"bg-c-pink\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={3} className=\"bg-c-sky\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={3} className=\"bg-c-pink\">\r\n            xs=3\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n\r\n        <Grid container spacing={3}>\r\n          <p className=\"m22\">breakでのレイアウト変更無し</p>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>xs=12</Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Paper className={classes.paper}>xs=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Paper className={classes.paper}>xs=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>xs=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>xs=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>xs=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper className={classes.paper}>xs=3</Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n\r\n        <Grid container spacing={3}>\r\n          <p className=\"m22\">breakでのレイアウト変更あり</p>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>xs=12</Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}>\r\n            <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R030Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// material-ui\r\n// gried layout\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  parent: {\r\n    height: \"200px\",\r\n  },\r\n  cell_1: {\r\n    height: \"30px\",\r\n    width: \"60%\",\r\n  },\r\n  cell_2: {\r\n    height: \"40px\",\r\n    width: \"80%\",\r\n  },\r\n  cell_3: {\r\n    height: \"50px\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R031Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        <p className=\"m22\">左上寄せ デフォルト</p>\r\n        <Grid container className={classes.parent}>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_1}>cell_1</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_2}>cell_2</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_3}>cell_3</Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n\r\n        <p className=\"m22\">横並び、中央寄せ</p>\r\n        <Grid\r\n          container\r\n          className={classes.parent}\r\n          // direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_1}>cell_1</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_2}>cell_2</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_3}>cell_3</Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n\r\n        <p className=\"m22\">縦並び、中央寄せ</p>\r\n        <Grid\r\n          container\r\n          className={classes.parent}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_1}>cell_1</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_2}>cell_2</Paper>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Paper className={classes.cell_3}>cell_3</Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R031Main;\r\n","import React from \"react\";\r\nimport { colors, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// material-ui\r\n// gried layout\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  parent: {\r\n    // height: \"200px\",\r\n    border: \"solid 1px\",\r\n  },\r\n  parent2: {\r\n    height: \"200px\",\r\n    // border: \"solid 1px\",\r\n    backgroundColor: \"skyblue\",\r\n  },\r\n  parent3: {\r\n    height: \"200px\",\r\n    // border: \"solid 1px\",\r\n    backgroundColor: \"aqua\",\r\n  },\r\n  cell_1: {\r\n    height: \"30px\",\r\n    width: \"60%\",\r\n  },\r\n  cell_2: {\r\n    height: \"40px\",\r\n    width: \"80%\",\r\n  },\r\n  cell_3: {\r\n    height: \"50px\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R032Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <p className=\"m22\">左</p>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <p className=\"m22\">右</p>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            container\r\n            className={classes.parent}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={2}>\r\n              <Paper className={classes.cell_1}>cell_1</Paper>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Paper className={classes.cell_2}>cell_2</Paper>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Paper className={classes.cell_3}>cell_3</Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} className={classes.parent}>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              className={classes.parent2}\r\n              justify=\"space-around\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_1}>cell_1</Paper>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_2}>cell_2</Paper>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_3}>cell_3</Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              // direction=\"column\"\r\n              className={classes.parent3}\r\n              justify=\"space-around\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_1}>cell_1</Paper>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_2}>cell_2</Paper>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Paper className={classes.cell_3}>cell_3</Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R032Main;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\n// material-ui\r\n// navbar\r\n\r\n// 下記からコピーしてきただけ\r\n// https://material-ui.com/components/drawers/\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R040Main = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R040Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n// material-ui\r\n// navbar\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R041Main = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        {/* Navbar */}\r\n        <p className=\"m22\">標準のメニュー</p>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              News\r\n            </Typography>\r\n            <Button color=\"inherit\">Menu</Button>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <br />\r\n\r\n        <p className=\"m22\">細めのメニュー</p>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar variant=\"dense\">\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                className={classes.title}\r\n              >\r\n                Photos\r\n              </Typography>\r\n              <Button color=\"inherit\">Menu</Button>\r\n              <Button color=\"inherit\">Login</Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <p>R041Main.js</p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R041Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n// material-ui\r\n// navbar\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R042Main = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Scroll to Hide App Bar\r\n            </Typography>\r\n            <Button color=\"inherit\">Menu</Button>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n      <Container>\r\n        <p>下にスクロールするとメニューが消える</p>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <p>R041Main.js</p>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default R042Main;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\n// material-ui\r\n// navbar\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R043Main = () => {\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * メニューオープン用\r\n   */\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  /**\r\n   * メニューオープン用\r\n   * @param {*} anchor\r\n   * @param {*} open\r\n   */\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log(\"toggleDrawer\");\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  /**\r\n   * メニューに表示する内容\r\n   * @param {*} anchor\r\n   */\r\n  const list = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <MailIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"MailIcon\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        {/* 画面上部 Navbar */}\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={toggleDrawer(\"left\", true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              News\r\n            </Typography>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* メニュー表示用 */}\r\n        <React.Fragment>\r\n          <Drawer\r\n            anchor={\"left\"}\r\n            open={state[\"left\"]}\r\n            onClose={toggleDrawer(\"left\", false)}\r\n          >\r\n            {list(\"left\")}\r\n          </Drawer>\r\n        </React.Fragment>\r\n        <br />\r\n\r\n        <p>Drawerを使用すると下記の警告が表示される？</p>\r\n        <p>\r\n          Warning: findDOMNode is deprecated in StrictMode. findDOMNode was\r\n          passed an instance of Transition which is inside StrictMode. Instead,\r\n          add a ref directly to the element you want to reference. Learn more\r\n          about using refs safely here:\r\n          https://reactjs.org/link/strict-mode-find-node\r\n        </p>\r\n        <p>\r\n          index.jsから＜React.StrictMode＞を削除すれば警告は消えるが、\r\n          それをすることによって将来的になにが起こるかわからない。\r\n        </p>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <p>R043Main.js</p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R043Main;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { RootRef } from \"@material-ui/core\";\r\n\r\n// material-ui\r\n// navbar\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R045Main = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        {/* Navbar */}\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              News\r\n            </Typography>\r\n            <Button color=\"inherit\">Menu</Button>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleClose}>My account</MenuItem>\r\n          <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        </Menu>\r\n\r\n        <p className=\"m22\">メニューボタンクリックでメニューを表示する</p>\r\n        <p className=\"m22\">下記エラーが出力される。。。</p>\r\n        <p>\r\n          Warning: findDOMNode is deprecated in StrictMode. findDOMNode was\r\n          passed an instance of Transition which is inside StrictMode. Instead,\r\n          add a ref directly to the element you want to reference. Learn more\r\n          about using refs safely here:\r\n          https://reactjs.org/link/strict-mode-find-node\r\n        </p>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <p>R045Main.js</p>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R045Main;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { ControlCamera } from \"@material-ui/icons\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\n// material-ui\r\n// form\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R050Main = () => {\r\n  const classes = useStyles();\r\n\r\n  // スイッチの値保持用\r\n  const [state, setState] = useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  /**\r\n   * スイッチの切り替え\r\n   * @param {*} event\r\n   */\r\n  const handleChange = (event) => {\r\n    console.log(\"handleChange\");\r\n    console.log(\"event.target.name\", event.target.name);\r\n    console.log(\"event.target.checked\", event.target.checked);\r\n    console.log(\"state\", state);\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        <p className=\"m22\">スイッチ</p>\r\n        <Switch\r\n          checked={state.checkedA}\r\n          onChange={handleChange}\r\n          name=\"checkedA\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n        <span>「{state.checkedA}」</span>\r\n        <Switch\r\n          checked={state.checkedB}\r\n          onChange={handleChange}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n        />\r\n        <span>「{state.checkedB}」</span>\r\n        <Switch inputProps={{ \"aria-label\": \"primary checkbox\" }} />\r\n        <hr />\r\n\r\n        <p className=\"m22\">テキストフィールド</p>\r\n        <TextField id=\"standard-basic\" label=\"Standard\" />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"お名前\"\r\n          placeholder=\"名無しさん\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic2\"\r\n          label=\"お名前\"\r\n          variant=\"outlined\"\r\n          required\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"outlined-disabled\"\r\n          label=\"Disabled\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"outlined\"\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-error-helper-text\"\r\n          label=\"お名前\"\r\n          variant=\"outlined\"\r\n          defaultValue=\"Hello World\"\r\n          required\r\n          error\r\n          helperText=\"Incorrect entry.\"\r\n        />\r\n        <hr />\r\n\r\n        <p>マルチ テキストエリア</p>\r\n        <TextField\r\n          id=\"outlined-textarea\"\r\n          label=\"改行可能\"\r\n          placeholder=\"入力\"\r\n          multiline\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"outlined\"\r\n        />\r\n        <hr />\r\n\r\n        <p>アイコン付き</p>\r\n        <div>\r\n          <Grid container alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <AccountCircle />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n              <AccountCircle />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                id=\"input-with-icon-grid2\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"With a grid\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R050Main;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { ControlCamera } from \"@material-ui/icons\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\n// material-ui\r\n// form\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  good_btn: {\r\n    border: \"1px solid pink\",\r\n    padding: \"1px 1px\",\r\n    color: \"hotpink\",\r\n    fontWeight: 600,\r\n  },\r\n  icon_pink: {\r\n    color: \"deeppink\",\r\n    // backgroundColor: \"pink\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n  },\r\n}))(Badge);\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R051Main = () => {\r\n  const classes = useStyles((theme) => ({}));\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow height200vh\">\r\n        <h3 className=\"m22\">ボタン、バッジ</h3>\r\n        <hr />\r\n        <div className={classes.root}>\r\n          <Fab color=\"primary\" aria-label=\"add\">\r\n            <AddIcon />\r\n          </Fab>\r\n          <Fab color=\"secondary\" aria-label=\"edit\">\r\n            <EditIcon />\r\n          </Fab>\r\n          <Fab variant=\"extended\">\r\n            <NavigationIcon className={classes.extendedIcon} />\r\n            Navigate\r\n          </Fab>\r\n          <Fab disabled aria-label=\"like\">\r\n            <FavoriteIcon />\r\n          </Fab>\r\n          <Fab size=\"small\" color=\"primary\" aria-label=\"add\">\r\n            <FavoriteIcon />\r\n          </Fab>\r\n        </div>\r\n        <hr />\r\n        <div className={classes.root}>\r\n          <Badge badgeContent={4} color=\"primary\">\r\n            <MailIcon />\r\n          </Badge>\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n          <IconButton aria-label=\"cart\">\r\n            <StyledBadge badgeContent={4} color=\"secondary\">\r\n              <ShoppingCartIcon />\r\n            </StyledBadge>\r\n          </IconButton>\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <ShoppingCartIcon />\r\n          </Badge>\r\n          <hr />\r\n          <IconButton>\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <MailIcon color=\"secondary\" />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton>\r\n            <Badge badgeContent={4} color=\"primary\">\r\n              <FavoriteIcon color=\"secondary\" />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton>\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <FavoriteIcon className={classes.icon_pink} />\r\n            </Badge>\r\n          </IconButton>\r\n          <hr />\r\n          <Fab size=\"small\" color=\"secondary\" aria-label=\"add\">\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <FavoriteIcon />\r\n            </Badge>\r\n          </Fab>\r\n          <Fab variant=\"extended\" color=\"secondary\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Fab>\r\n          <Fab variant=\"extended\" color=\"secondary\" size=\"small\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Fab>\r\n          <Fab variant=\"round\" color=\"secondary\" size=\"small\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Fab>\r\n          <hr />\r\n          <Button variant=\"outlined\" color=\"primary\">\r\n            Outlined\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"secondary\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"secondary\" size=\"small\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n          <hr />\r\n          1. 名前：名無しさん 投稿日：2019/08/21 (水) 23:04:15&nbsp;\r\n          <Button variant=\"outlined\" color=\"secondary\" size=\"small\">\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n          <hr />\r\n          1. 名前：名無しさん 投稿日：2019/08/21 (水) 23:04:15&nbsp;\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.good_btn}\r\n          >\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n          <hr />\r\n          1.&nbsp;名無しさん：2020/08/21 23:04:15&nbsp;\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.good_btn}\r\n          >\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n          <hr />\r\n          1.&nbsp;名無しさん：2019/08/21 23:04:15&nbsp;\r\n          <IconButton>\r\n            <Badge badgeContent={4} color=\"error\">\r\n              <FavoriteIcon className={classes.icon_pink} />\r\n            </Badge>\r\n          </IconButton>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R051Main;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { ControlCamera } from \"@material-ui/icons\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\n// material-ui\r\n// form\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  good_btn: {\r\n    border: \"1px solid pink\",\r\n    padding: \"1px 1px\",\r\n    color: \"hotpink\",\r\n    fontWeight: 600,\r\n    // fontSize: \"16px\",\r\n    minWidth: \"45px\",\r\n  },\r\n  uname: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R052Main = () => {\r\n  const classes = useStyles((theme) => ({}));\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow height200vh\">\r\n        <h2 className=\"m22\">typography h2</h2>\r\n        あいうえお typograpy無し\r\n        <Typography variant=\"h5\">あいうえお h5</Typography>\r\n        <Typography variant=\"h6\">あいうえお h6</Typography>\r\n        <Typography>あいうえお variant無し</Typography>\r\n        <Typography variant=\"body1\">あいうえお body1</Typography>\r\n        <Typography variant=\"body2\">あいうえお body2</Typography>\r\n        <Typography variant=\"caption\">あいうえお caption</Typography>\r\n        <br />\r\n        <Typography variant=\"inherit\">あいうえお inherit</Typography>\r\n        <br />\r\n        <Typography variant=\"overline\">あいうえお overline</Typography>\r\n        <br />\r\n        <Typography variant=\"srOnly\">あいうえお srOnly</Typography>\r\n        <Typography variant=\"subtitle1\">あいうえお subtitle1</Typography>\r\n        <Typography variant=\"subtitle2\">あいうえお subtitle2</Typography>\r\n        <hr />\r\n        1.&nbsp;名無しさん：2020/08/21 23:04:15&nbsp;\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          className={classes.good_btn}\r\n        >\r\n          <FavoriteIcon />\r\n          &nbsp;{5}\r\n        </Button>\r\n        <hr />\r\n        <Typography variant=\"body2\">\r\n          1.&nbsp;\r\n          <Typography variant=\"inherit\" className={classes.uname}>\r\n            名無しさん\r\n          </Typography>\r\n          ：2020/08/21 23:04:15 &nbsp;\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.good_btn}\r\n          >\r\n            <FavoriteIcon />\r\n            &nbsp;{5}\r\n          </Button>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R052Main;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { ControlCamera } from \"@material-ui/icons\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\n// material-ui\r\n// form\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  good_btn: {\r\n    border: \"1px solid pink\",\r\n    padding: \"1px 1px\",\r\n    color: \"hotpink\",\r\n    fontWeight: 600,\r\n    // fontSize: \"16px\",\r\n    minWidth: \"45px\",\r\n  },\r\n  uname: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R053Main = () => {\r\n  const classes = useStyles((theme) => ({}));\r\n\r\n  // good\r\n  const [good, setGood] = useState(0);\r\n\r\n  /**\r\n   * Goodボタンクリック\r\n   */\r\n  const handleGoodClick = () => {\r\n    setGood(good + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\" height200vh\">\r\n        <h2 className=\"m22\">typography h2</h2>\r\n        <hr />\r\n        <Typography variant=\"body2\">\r\n          1.&nbsp;\r\n          <Typography variant=\"inherit\" className={classes.uname}>\r\n            名無しさん\r\n          </Typography>\r\n          ：2020/08/21 23:04:15 &nbsp;\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.good_btn}\r\n            onClick={handleGoodClick}\r\n          >\r\n            <FavoriteIcon />\r\n            &nbsp;{good}\r\n          </Button>\r\n        </Typography>\r\n\r\n        <hr />\r\n        <p>パネル１</p>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container>&nbsp;</Grid>\r\n            <Grid container>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  label=\"お名前\"\r\n                  placeholder=\"名無しさん\"\r\n                  variant=\"outlined\"\r\n                />\r\n                <Grid container>&nbsp;</Grid>\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  fullWidth\r\n                  // size=\"small\"\r\n                  label=\"本文\"\r\n                  multiline\r\n                  rows={4}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>&nbsp;</Grid>\r\n            <Grid container>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n              <Grid item container xs={10} justify=\"flex-end\">\r\n                <Button variant=\"outlined\" size=\"small\">\r\n                  送信\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>&nbsp;</Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <hr />\r\n        <p>パネル２</p>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container>&nbsp;</Grid>\r\n            <Grid container>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n              <Grid container item xs={10}>\r\n                <Grid item xs={8}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    label=\"お名前\"\r\n                    placeholder=\"名無しさん\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n                <Grid item container xs={4} justify=\"flex-end\">\r\n                  <Button variant=\"outlined\">送信</Button>\r\n                </Grid>\r\n                {/* <Grid item xs={4}> */}\r\n                {/* <Grid item container xs={10} justify=\"flex-end\"> */}\r\n                {/* <Button variant=\"outlined\">送信</Button> */}\r\n                {/* </Grid> */}\r\n                {/* </Grid> */}\r\n\r\n                <Grid container>&nbsp;</Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    fullWidth\r\n                    // size=\"small\"\r\n                    label=\"本文\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                &nbsp;\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>&nbsp;</Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R053Main;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\n// msgboard mock\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  good_btn: {\r\n    border: \"1px solid pink\",\r\n    padding: \"1px 1px\",\r\n    color: \"pink\",\r\n    fontWeight: 600,\r\n    // fontSize: \"16px\",\r\n    minWidth: \"45px\",\r\n  },\r\n  uname: {\r\n    fontWeight: 600,\r\n  },\r\n  thread_title: {\r\n    backgroundColor: \"#5b5b5b\",\r\n    color: \"white\",\r\n    borderRadius: \"4px 4px 4px 4px\",\r\n    paddingLeft: \"0.5em\",\r\n  },\r\n  msgs_list: {\r\n    // backgroundColor: \"#5b5b5b\",\r\n    paddingLeft: \"1em\",\r\n    // color: \"#363636\",\r\n    color: \"#474747\",\r\n  },\r\n  msg_title: {\r\n    // backgroundColor: \"#5b5b5b\",\r\n    marginTop: \"2px\",\r\n    marginBottom: \"2px\",\r\n  },\r\n  input_panel: {\r\n    paddingLeft: \"1.2em\",\r\n    paddingRight: \"1.2em\",\r\n  },\r\n  footer_container: {\r\n    height: \"5em\",\r\n    backgroundColor: \"#FAFAFA\",\r\n    color: \"gray\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R054Main = () => {\r\n  // style\r\n  const classes = useStyles();\r\n\r\n  // good\r\n  const [good, setGood] = useState(0);\r\n\r\n  /**\r\n   * Goodボタンクリック\r\n   */\r\n  const handleGoodClick = () => {\r\n    setGood(good + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\" \">\r\n        {/* <Typography variant=\"h5\" className=\"m22\">\r\n          msgboard mock\r\n        </Typography>\r\n        <hr /> */}\r\n\r\n        {/* タイトル */}\r\n        <Grid container className={classes.thread_title}>\r\n          <Typography variant=\"subtitle1\">東京23区板掲示板</Typography>\r\n        </Grid>\r\n\r\n        {/* メッセージ一覧 */}\r\n        <Grid container>\r\n          <ol className={classes.msgs_list}>\r\n            <li className={classes.msg_title}>\r\n              <Typography variant=\"body2\">\r\n                <Typography variant=\"inherit\" className={classes.uname}>\r\n                  名無しさん\r\n                </Typography>\r\n                ：2020/08/21 23:04:15 &nbsp;\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  className={classes.good_btn}\r\n                  onClick={handleGoodClick}\r\n                >\r\n                  <FavoriteIcon />\r\n                  &nbsp;{good}\r\n                </Button>\r\n              </Typography>\r\n            </li>\r\n            <Typography variant=\"body2\">\r\n              ※980を過ぎたら使い切る前に次スレ申請をしましょう。\r\n              ↑積極的にお願いします。\r\n              ※980以降は「後継スレ作成完了」のアナウンスがあるまで埋めないようお願いします。\r\n              ※荒らしは放置で！ ↑構わなくても内容が酷い書き込みは削除されます。\r\n              まちBBSの利用前にこちらのご確認をどうぞ…\r\n            </Typography>\r\n            <li className={classes.msg_title}>\r\n              <Typography variant=\"body2\">\r\n                <Typography variant=\"inherit\" className={classes.uname}>\r\n                  名無しさん\r\n                </Typography>\r\n                ：2020/08/21 23:04:15 &nbsp;\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  className={classes.good_btn}\r\n                  onClick={handleGoodClick}\r\n                >\r\n                  <FavoriteIcon />\r\n                  &nbsp;{good}\r\n                </Button>\r\n              </Typography>\r\n            </li>\r\n            <Typography variant=\"body2\">\r\n              経堂に住んでみたいんだけど店はだいたい何でもあるイメージ\r\n              何か足りないものある？\r\n            </Typography>\r\n          </ol>\r\n        </Grid>\r\n\r\n        {/* 入力欄 */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.input_panel}>\r\n            <Grid container>&nbsp;</Grid>\r\n            <Grid container>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"お名前\"\r\n                placeholder=\"名無しさん\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Grid container>&nbsp;</Grid>\r\n              <TextField\r\n                fullWidth\r\n                // size=\"small\"\r\n                label=\"本文\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid container>&nbsp;</Grid>\r\n            <Grid container justify=\"flex-end\">\r\n              <Button variant=\"outlined\" size=\"small\">\r\n                送信\r\n              </Button>\r\n            </Grid>\r\n            <Grid container>&nbsp;</Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* footer */}\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.footer_container}\r\n        >\r\n          &copy; Copyright 2021 Hoge Corp.\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R054Main;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Table サンプルコピーしただけ\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst R060Table = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default R060Table;\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\n// import { withCookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const ApiMBContext = createContext();\r\n\r\n/**\r\n * API Endpoint access\r\n * @param {*} props\r\n */\r\nconst MsgBoardContextProvider = (props) => {\r\n  // テスト用\r\n  const [testCount, setTestCount] = useState(0);\r\n  // メッセージ一覧\r\n  const [msgs, setMsgs] = useState([]);\r\n\r\n  /**\r\n   * 初期化処理\r\n   */\r\n  useEffect(() => {\r\n    // console.log(\"MsgBoardContextProvider useEffect start...\");\r\n  }, []);\r\n\r\n  /**\r\n   * テスト用\r\n   */\r\n  const addTestCount = () => {\r\n    // console.log(\"addTestCount start...\");\r\n    let _cnt = testCount;\r\n    _cnt += 1;\r\n    setTestCount(_cnt);\r\n  };\r\n\r\n  /**\r\n   * API GET\r\n   * msgを全件取得する\r\n   */\r\n  const apiGetMsgs = async () => {\r\n    try {\r\n      // API発行\r\n      const res = await axios.get(\"http://127.0.0.1:8000/api/thmsgs/\", {\r\n        headers: {},\r\n      });\r\n      // 結果設定\r\n      setMsgs(res.data);\r\n    } catch (error) {\r\n      // エラーが発生した場合\r\n      // TODO: とりあえずコンソールにメッセージを出力しておく\r\n      console.log(\"error apiGetMsgs\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * API GET\r\n   * msgを1件取得する\r\n   * 返却値はPromiseとなる？\r\n   * @param {*} id\r\n   */\r\n  const apiGetMsgOne = async (id) => {\r\n    try {\r\n      // API発行\r\n      const res = await axios.get(`http://127.0.0.1:8000/api/thmsgs/${id}`, {\r\n        headers: {},\r\n      });\r\n      // 結果を返却する\r\n      // 返却値はPromiseとなる？\r\n      //   console.log(\"res\", res);\r\n      //   console.log(\"res.data\", res.data);\r\n      //   return res.data;\r\n      return res;\r\n    } catch (error) {\r\n      // エラーが発生した場合\r\n      // TODO: とりあえずコンソールにメッセージを出力しておく\r\n      console.log(\"error apiGetMsgOne\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * API POST\r\n   * msgを1件登録する\r\n   * @param {*} item\r\n   */\r\n  const apiPostMsg = async (item) => {\r\n    try {\r\n      // API post プロフィール作成\r\n      const res = await axios.post(\"http://127.0.0.1:8000/api/thmsgs/\", item, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      // 結果設定\r\n      setMsgs([...msgs, res.data]);\r\n    } catch (error) {\r\n      // エラーが発生した場合\r\n      // TODO: とりあえずコンソールにメッセージを出力しておく\r\n      console.log(\"error apiPostMsg\");\r\n      // エラーハンドリングの例\r\n      if (error.response) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status); // 400\r\n        console.log(error.response.statusText); // Bad Request\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        console.log(error.request);\r\n      } else {\r\n        console.log(\"Error\", error.message);\r\n      }\r\n      console.log(error.config);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * API PUT\r\n   * msgを1件更新する\r\n   */\r\n  const apiPutMsg = async (item) => {\r\n    try {\r\n      // API put プロフィール更新\r\n      const res = await axios.put(\r\n        `http://127.0.0.1:8000/api/thmsgs/${item.id}/`,\r\n        item,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      // 結果設定\r\n      msgs.map((_mitem, idx) => {\r\n        if (_mitem.id === res.data.id) {\r\n          msgs[idx] = res.data;\r\n        }\r\n      });\r\n      setMsgs([...msgs]);\r\n    } catch (error) {\r\n      // エラーが発生した場合\r\n      // TODO: とりあえずコンソールにメッセージを出力しておく\r\n      console.log(\"error apiPutMsg\");\r\n      // エラーハンドリングの例\r\n      if (error.response) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status); // 400\r\n        console.log(error.response.statusText); // Bad Request\r\n        console.log(error.response.headers);\r\n      } else if (error.request) {\r\n        console.log(error.request);\r\n      } else {\r\n        console.log(\"Error\", error.message);\r\n      }\r\n      console.log(error.config);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // 各componentから参照するstateを定義する\r\n  return (\r\n    <ApiMBContext.Provider\r\n      value={{\r\n        testCount,\r\n        addTestCount,\r\n        msgs,\r\n        apiGetMsgs,\r\n        apiGetMsgOne,\r\n        apiPostMsg,\r\n        apiPutMsg,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ApiMBContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MsgBoardContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { ApiMBContext } from \"../../context/ApiMBContext\";\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  good_btn: {\r\n    border: \"1px solid pink\",\r\n    padding: \"1px 1px\",\r\n    color: \"pink\",\r\n    fontWeight: 600,\r\n    // fontSize: \"16px\",\r\n    minWidth: \"50px\",\r\n  },\r\n}));\r\n\r\n/**\r\n * Goodボタン\r\n * @param {*} props\r\n */\r\nconst GoodBtn = (props) => {\r\n  // style\r\n  const classes = useStyles();\r\n  // context\r\n  const { apiPutMsg } = useContext(ApiMBContext);\r\n  // msg\r\n  const msg = props.msg;\r\n\r\n  /**\r\n   * Goodボタンクリック\r\n   */\r\n  const handleGoodClick = () => {\r\n    // TODO:とりあえず画面上のgoodをaddする方式とする\r\n    // 本来であればaddはサーバー側で行うべきである\r\n    msg.good += 1;\r\n    // PUT\r\n    apiPutMsg(msg);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        className={classes.good_btn}\r\n        onClick={handleGoodClick}\r\n      >\r\n        <FavoriteIcon />\r\n        &nbsp;{msg.good}&nbsp;\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GoodBtn;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GoodBtn from \"./GoodBtn\";\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  msg_title: {\r\n    marginTop: \"2px\",\r\n    marginBottom: \"2px\",\r\n  },\r\n  uname: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\n/**\r\n * メッセージ\r\n * @param {*} props\r\n */\r\nconst MsgItem = (props) => {\r\n  // style\r\n  const classes = useStyles();\r\n  // msg\r\n  const msg = props.item;\r\n\r\n  return (\r\n    <div>\r\n      <li className={classes.msg_title}>\r\n        <Typography variant=\"body2\">\r\n          <Typography variant=\"inherit\" className={classes.uname}>\r\n            {msg.name}\r\n          </Typography>\r\n          ：{msg.date.substring(0, 19)}&nbsp;\r\n          <GoodBtn msg={msg} />\r\n        </Typography>\r\n      </li>\r\n      <Typography variant=\"body2\">{msg.text}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgItem;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ApiMBContext } from \"../../context/ApiMBContext\";\r\nimport MsgItem from \"./MsgItem\";\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  msgs_list: {\r\n    paddingLeft: \"1em\",\r\n    color: \"#474747\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メッセージ一覧\r\n */\r\nconst MsgList = () => {\r\n  // style\r\n  const classes = useStyles();\r\n  // useContext\r\n  const { msgs } = useContext(ApiMBContext);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <ol className={classes.msgs_list}>\r\n          {msgs.map((item, idx) => {\r\n            return <MsgItem key={idx} item={item} />;\r\n          })}\r\n        </ol>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgList;\r\n","/**\r\n * 成形したtimestampを返却する\r\n * @return yyyy/mm/dd/ hh:mm.sss\r\n */\r\nexport function getFormatTime() {\r\n  const date = new Date();\r\n  const _yyyymmddhhmmss =\r\n    date.getFullYear() +\r\n    \"/\" +\r\n    (\"0\" + (date.getMonth() + 1)).slice(-2) +\r\n    \"/\" +\r\n    (\"0\" + date.getDate()).slice(-2) +\r\n    \" \" +\r\n    (\"0\" + date.getHours()).slice(-2) +\r\n    \":\" +\r\n    (\"0\" + date.getMinutes()).slice(-2) +\r\n    \":\" +\r\n    (\"0\" + date.getSeconds()).slice(-2) +\r\n    \".\" +\r\n    date.getMilliseconds();\r\n  return _yyyymmddhhmmss;\r\n}\r\n\r\n/**\r\n * timestampを返却する\r\n * @return 9999999999999 ミリ秒\r\n */\r\nexport function getTime() {\r\n  const _time = new Date().getTime();\r\n  return _time;\r\n}\r\n\r\n/**\r\n * ランダムな値を生成する\r\n * @return ランダムな文字列 10～11桁程度\r\n */\r\nexport function getRandStr() {\r\n  return Math.random().toString(32).substring(2);\r\n  // return Math.random().toString(16);\r\n  // return Math.random().toString(32);\r\n  // return Math.random().toString(32);\r\n}\r\n\r\n/**\r\n * ランダムな値を生成する\r\n * @param {*} max\r\n * @return ランダムな整数 0～max-1\r\n */\r\nexport function getRandValue(max = 10) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { ApiMBContext } from \"../../context/ApiMBContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport * as utils from \"../../utils/utils\";\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  input_panel: {\r\n    paddingLeft: \"1.2em\",\r\n    paddingRight: \"1.2em\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メッセージ入力欄\r\n */\r\nconst MsgInputField = () => {\r\n  // style\r\n  const classes = useStyles();\r\n  // context\r\n  const { apiPostMsg } = useContext(ApiMBContext);\r\n  // 入力欄\r\n  const [msgInput, setMsgInput] = useState({ name: \"名無しさん\", text: \"\" });\r\n\r\n  /**\r\n   * 名前編集\r\n   */\r\n  const handleNameChange = () => (event) => {\r\n    const value = event.target.value;\r\n    setMsgInput({ ...msgInput, name: value });\r\n  };\r\n\r\n  /**\r\n   * 本文編集\r\n   */\r\n  const handleTextChange = () => (event) => {\r\n    const value = event.target.value;\r\n    setMsgInput({ ...msgInput, text: value });\r\n  };\r\n\r\n  /**\r\n   * 送信\r\n   */\r\n  const handleSend = () => {\r\n    // 送信データを作成する\r\n    const msg = {\r\n      key: utils.getRandStr(),\r\n      name: msgInput.name,\r\n      text: msgInput.text ? msgInput.text : \"こんにちは\",\r\n      date: utils.getFormatTime(),\r\n      good: 0,\r\n    };\r\n    // POST\r\n    apiPostMsg(msg);\r\n    // 入力欄を初期化する\r\n    setMsgInput({ name: \"名無しさん\", text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.input_panel}>\r\n          <Grid container>&nbsp;</Grid>\r\n          <Grid container>\r\n            {/* お名前 */}\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              label=\"お名前\"\r\n              placeholder=\"名無しさん\"\r\n              variant=\"outlined\"\r\n              value={msgInput.name}\r\n              onChange={handleNameChange()}\r\n            />\r\n            <Grid container>&nbsp;</Grid>\r\n\r\n            {/* 本文 */}\r\n            <TextField\r\n              fullWidth\r\n              label=\"本文\"\r\n              placeholder=\"今日のできごと\"\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              value={msgInput.text}\r\n              onChange={handleTextChange()}\r\n            />\r\n          </Grid>\r\n          <Grid container>&nbsp;</Grid>\r\n          <Grid container justify=\"flex-end\">\r\n            {/* 送信 */}\r\n            <Button variant=\"outlined\" size=\"small\" onClick={handleSend}>\r\n              送信\r\n            </Button>\r\n          </Grid>\r\n          <Grid container>&nbsp;</Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgInputField;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ApiMBContext } from \"../../context/ApiMBContext\";\r\nimport MsgList from \"./MsgList\";\r\nimport MsgInputField from \"./MsgInputField\";\r\n// import TestComponent from \"./TestComponent\";\r\n\r\n/**\r\n * style\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  thread_title: {\r\n    backgroundColor: \"#5b5b5b\",\r\n    color: \"white\",\r\n    borderRadius: \"4px 4px 4px 4px\",\r\n    paddingLeft: \"0.5em\",\r\n  },\r\n  footer_container: {\r\n    height: \"5em\",\r\n    backgroundColor: \"#FAFAFA\",\r\n    color: \"gray\",\r\n  },\r\n}));\r\n\r\nconst R100MBMain = () => {\r\n  // style\r\n  const classes = useStyles();\r\n  // useContext\r\n  const { apiGetMsgs } = useContext(ApiMBContext);\r\n\r\n  /**\r\n   * 初期化\r\n   */\r\n  useEffect(() => {\r\n    // msgを全件取得する\r\n    apiGetMsgs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed>\r\n        {/* タイトル */}\r\n        <Grid container className={classes.thread_title}>\r\n          <Typography variant=\"subtitle1\">東京23区板掲示板</Typography>\r\n        </Grid>\r\n\r\n        {/* メッセージ一覧 */}\r\n        <MsgList />\r\n\r\n        {/* 入力欄 */}\r\n        <MsgInputField />\r\n\r\n        {/* footer */}\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.footer_container}\r\n        >\r\n          &copy; Copyright 2021 Hoge Corp.\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* テスト用 */}\r\n      {/* <TestComponent /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R100MBMain;\r\n","import React from \"react\";\r\n\r\n/**\r\n * 正方形のマス目1つ\r\n */\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.handleClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n/**\r\n * 盤面\r\n */\r\nclass Board extends React.Component {\r\n  /**\r\n   * Squareを呼び出す\r\n   * @param {*} i\r\n   */\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        handleClick={() => {\r\n          this.props.handleClick(i);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // マス目を描画する\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Game Main\r\n */\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // 履歴\r\n      history: [\r\n        {\r\n          // マス目9つ分\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      // 入力した数\r\n      stepNumber: 0,\r\n      // 次の入力\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * マス目クリック\r\n   * @param {*} i\r\n   */\r\n  handleClick(i) {\r\n    // console.log(\"handelClick\", i);\r\n\r\n    // 現在の入力までのhistoryを取得する\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    // 現在の入力を取得する\r\n    const current = history[history.length - 1];\r\n    // 重要！！\r\n    // stateの値をslice()してオブジェクトのコピーを作成する\r\n    const squares = current.squares.slice();\r\n\r\n    // 勝敗がついた or マスに入力ありの場合はreturn\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    // マスを更新する\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      // historyを追加する\r\n      // concatを使用して新たなオブジェクトを作成している\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      // 入力した数\r\n      stepNumber: history.length,\r\n      // 次の入力\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Go to ボタンクリック\r\n   * @param {*} move\r\n   */\r\n  jumpto(step) {\r\n    // console.log(\"jumpto\", step);\r\n\r\n    // 入力した数と次の入力を更新する\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // 履歴、現在の入力、勝敗を取得する\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    /**\r\n     * Go to ボタンを描画する\r\n     */\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? `Go to Move # ${move}` : \"Go to Move # start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpto(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    // 画面上に描画するtxtを生成する\r\n    // 決着した場合はtxtを書き換える\r\n    let txtStatus = \"\";\r\n    if (winner) {\r\n      txtStatus = `Winner: ${winner}`;\r\n    } else {\r\n      txtStatus = `Next player: ${current.xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          {/* 盤面 */}\r\n          <Board\r\n            squares={current.squares}\r\n            handleClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          {/* 次の入力 */}\r\n          <div>{txtStatus}</div>\r\n          {/* 入力の数 */}\r\n          <div>stepNumber: {this.state.stepNumber}</div>\r\n          {/* Go to ボタン */}\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * ゲーム勝者の判定\r\n * @param {*} squares\r\n * @retunr X:Xの勝利 O:Oの勝利 null:未決着\r\n */\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Game from \"./index.js\";\r\n\r\n/**\r\n * React Tutorial\r\n * チュートリアル：React の導入\r\n * https://ja.reactjs.org/tutorial/tutorial.html\r\n */\r\nconst R110Main = () => {\r\n  return (\r\n    <div>\r\n      <p>R110Main.jsx</p>\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R110Main;\r\n","import React from \"react\";\r\n\r\n/**\r\n * 正方形のマス目1つ\r\n */\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.handleClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n/**\r\n * 盤面\r\n */\r\nclass Board extends React.Component {\r\n  /**\r\n   * Squareを呼び出す\r\n   * @param {*} i\r\n   */\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        handleClick={() => {\r\n          this.props.handleClick(i);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // マス目を描画する\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Game Main\r\n */\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // 履歴\r\n      history: [\r\n        {\r\n          // マス目9つ分\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      // 入力した数\r\n      stepNumber: 0,\r\n      // 次の入力\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * マス目クリック\r\n   * @param {*} i\r\n   */\r\n  handleClick(i) {\r\n    // console.log(\"handelClick\", i);\r\n\r\n    // 現在の入力までのhistoryを取得する\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    // 現在の入力を取得する\r\n    const current = history[history.length - 1];\r\n    // 重要！！\r\n    // stateの値をslice()してオブジェクトのコピーを作成する\r\n    const squares = current.squares.slice();\r\n\r\n    // 勝敗がついた or マスに入力ありの場合はreturn\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    // マスを更新する\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      // historyを追加する\r\n      // concatを使用して新たなオブジェクトを作成している\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      // 入力した数\r\n      stepNumber: history.length,\r\n      // 次の入力\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Go to ボタンクリック\r\n   * @param {*} move\r\n   */\r\n  jumpto(step) {\r\n    // console.log(\"jumpto\", step);\r\n\r\n    // 入力した数と次の入力を更新する\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // 履歴、現在の入力、勝敗を取得する\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    /**\r\n     * Go to ボタンを描画する\r\n     */\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? `Go to Move # ${move}` : \"Go to Move # start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpto(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    // 画面上に描画するtxtを生成する\r\n    // 決着した場合はtxtを書き換える\r\n    let txtStatus = \"\";\r\n    if (winner) {\r\n      txtStatus = `Winner: ${winner}`;\r\n    } else {\r\n      txtStatus = `Next player: ${current.xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          {/* 盤面 */}\r\n          <Board\r\n            squares={current.squares}\r\n            handleClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          {/* 次の入力 */}\r\n          <div>{txtStatus}</div>\r\n          {/* 入力の数 */}\r\n          <div>stepNumber: {this.state.stepNumber}</div>\r\n          {/* Go to ボタン */}\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * ゲーム勝者の判定\r\n * @param {*} squares\r\n * @retunr X:Xの勝利 O:Oの勝利 null:未決着\r\n */\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Game from \"./index.js\";\r\n\r\n/**\r\n * React Tutorial 改良\r\n */\r\nconst R111Main = () => {\r\n  return (\r\n    <div>\r\n      <p>R111Main.jsx</p>\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R111Main;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n// Table サンプルコピーしただけ\r\n// 狭いTable\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst R061Table = () => {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = useState(true);\r\n\r\n  const handleDense = (e) => {\r\n    setDense(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size={dense ? \"small\" : \"medium\"}\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {/* <hr /> */}\r\n      <div>\r\n        <Switch\r\n          checked={dense}\r\n          onChange={(e) => handleDense(e)}\r\n          color=\"primary\"\r\n          //   name=\"checkedB\"\r\n          //   inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n        />\r\n        <span>Dense padding</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R061Table;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// Table\r\n// BookListのレイアウト\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"ログ・ホライズン\", \"橙乃　ままれ\", \"アニメ面白い\"),\r\n  createData(\"水木しげ子さんと結ばれました\", \"真坂　マサル\", \"\"),\r\n  createData(\"青い鳥\", \"\", \"アニメ面白いアニメ面白いアニメ面白いアニメ面白い\"),\r\n];\r\n\r\nconst R062Table = () => {\r\n  const classes = useStyles();\r\n  const [dence, setDence] = useState(true);\r\n\r\n  const handleDence = (e) => {\r\n    setDence(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size={dence ? \"small\" : \"medium\"}\r\n          aria-label=\"a dense table\"\r\n        >\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell align=\"left\" width=\"30%\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\" width=\"20%\">\r\n                  {row.calories}\r\n                </TableCell>\r\n                <TableCell align=\"left\" width=\"40%\">\r\n                  {/* {row.fat} */}\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    // label=\"Standard\"\r\n                    fullWidth\r\n                    value={row.fat}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\" width=\"10%\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    size=\"medium\"\r\n                    // size=\"small\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div>\r\n        <Switch\r\n          checked={dence}\r\n          onChange={(e) => handleDence(e)}\r\n          color=\"primary\"\r\n        />\r\n        <span>Dence padding</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R062Table;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Hidden, IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// Table\r\n// BookListのレイアウト\r\n// セルのカラムの幅を固定化しようとして失敗\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n    // backgroundColor: \"#ffffff\",\r\n    tbody: {\r\n      backgroundColor: \"black\",\r\n    },\r\n    // TableBody: {\r\n    //   // backgroundColor: \"red\",\r\n    //   backgroundColor: \"black\",\r\n    //   TableCell: {\r\n    //     backgroundColor: \"black\",\r\n    //   },\r\n    // },\r\n  },\r\n  cell: {\r\n    // backgroundColor: \"black\",\r\n    backgroundColor: \"aqua\",\r\n    // overflow: Hidden,\r\n    // overflow-x: hidden !important;\r\n    // overflowX: \"\",\r\n    // textOverflow: \"hidden\",\r\n  },\r\n  cellAuth: {\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    // width: 100,\r\n    // width: \"100px\",\r\n    // width: \"10%\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n});\r\n\r\nfunction createData(title, author, memo) {\r\n  return { title: title, author: author, memo: memo };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"ログ・ホライズン\",\r\n    \"橙乃　ままれままれままれままれままれままれままれ\",\r\n    \"アニメ面白い\"\r\n  ),\r\n  createData(\"水木しげ子さんと結ばれました\", \"真坂　マサル\", \"\"),\r\n  createData(\"青い鳥\", \"\", \"アニメ面白いアニメ面白いアニメ面白いアニメ面白い\"),\r\n];\r\n\r\nconst R063Table = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.title}>\r\n                <TableCell align=\"left\" width=\"30%\" className={classes.cell}>\r\n                  {/* <span overflow=\"hidden\">{row.name}</span> */}\r\n                  {/* <div style={{ width: 200, whiteSpace: \"nowrap\" }}> */}\r\n                  <div style={{ width: 100, whiteSpace: \"nowrap\" }}>\r\n                    {/* <div style={{ width: \"100\", whiteSpace: \"nowrap\" }}> */}\r\n                    <Box\r\n                      // component=\"div\"\r\n                      // my={2}\r\n                      overflow=\"hidden\"\r\n                      // bgcolor=\"background.paper\"\r\n                    >\r\n                      Overflow Hidden. Overflow Hidden. Overflow Hidden.\r\n                    </Box>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  width=\"20%\"\r\n                  // className={classes.cellAuth}\r\n                >\r\n                  {/* {row.calories} */}\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"nowrap\",\r\n                      overflow: \"hidden\",\r\n                      width: 100,\r\n                      // maxWidth: 50,\r\n                      textOverflow: \"ellipsis\",\r\n                    }}\r\n                  >\r\n                    {row.author}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"left\" width=\"40%\">\r\n                  <TextField id=\"standard-basic\" fullWidth value={row.memo} />\r\n                </TableCell>\r\n                <TableCell align=\"center\" width=\"10%\">\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    // size=\"medium\"\r\n                    size=\"small\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R063Table;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst R070Modal = () => {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p>\r\n      <R070Modal />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal あいうえお\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R070Modal;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + 0;\r\n  const left = 50 + 0;\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(1, 1, 1),\r\n  },\r\n}));\r\n\r\nconst R071Modal = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">こんにちは</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R071Modal;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + 0;\r\n  const left = 50 + 0;\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(1, 1, 1),\r\n  },\r\n}));\r\n\r\nconst R072Modal = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">こんにちは</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R072Modal;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// material-ui\r\n// BookListレイアウト\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    margin: 2,\r\n    marginLeft: \"0.2em\",\r\n  },\r\n  btnBookAdd: {\r\n    marginRight: \"0.5em\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R033Grid = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        {/* ヘッダ */}\r\n        <Grid container>\r\n          <Grid item container xs={9} className=\"bg-c-sky\">\r\n            <h1 className={classes.title}>読みたい本リスト</h1>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={3}\r\n            className=\"bg-c-pink\"\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button className={classes.btnBookAdd} variant=\"outlined\">\r\n              本を追加\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* 見出し */}\r\n        <Grid container className=\"bg-c-sky\" justify=\"center\">\r\n          <h2 className=\"m22\">保存した本</h2>\r\n        </Grid>\r\n\r\n        {/* List */}\r\n        <Grid container>\r\n          <Grid item xs={3} className=\"bg-c-sky\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={2} className=\"bg-c-pink\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={5} className=\"bg-c-sky\">\r\n            xs=3\r\n          </Grid>\r\n          <Grid item xs={2} className=\"bg-c-pink\">\r\n            xs=3\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R033Grid;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// material-ui\r\n// BookListレイアウト\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    margin: 2,\r\n    marginLeft: \"0.2em\",\r\n  },\r\n  btnBookAdd: {\r\n    marginRight: \"0.4em\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R034Grid = () => {\r\n  const classes = useStyles();\r\n\r\n  function createData(title, author, memo) {\r\n    return { title: title, author: author, memo: memo };\r\n  }\r\n\r\n  const bookRows = [\r\n    createData(\r\n      \"ログ・ホライズン\",\r\n      \"橙乃　ままれままれままれままれままれままれままれ\",\r\n      \"アニメ面白い\"\r\n    ),\r\n    createData(\"水木しげ子さんと結ばれました\", \"真坂　マサル\", \"\"),\r\n    createData(\r\n      \"青い鳥\",\r\n      \"\",\r\n      \"アニメ面白いアニメ面白いアニメ面白いアニメ面白い\"\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"bg-c-lightyellow\">\r\n        {/* ヘッダ */}\r\n        <Grid container>\r\n          <Grid item container xs={8} className=\"bg-c-sky\">\r\n            <h1 className={classes.title}>読みたい本リスト</h1>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={4}\r\n            className=\"bg-c-pink\"\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button className={classes.btnBookAdd} variant=\"outlined\">\r\n              本を追加\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* 見出し */}\r\n        <Grid container className=\"bg-c-sky\" justify=\"center\">\r\n          <h2 className=\"m22\">保存した本</h2>\r\n        </Grid>\r\n\r\n        {/* List */}\r\n        <Grid container className=\"bg-c-sky\">\r\n          {bookRows.map((item, idx) => {\r\n            return (\r\n              <Grid item container key={idx} alignItems=\"center\">\r\n                {/* タイトル */}\r\n                <Grid item xs={3} className=\"bg-c-sky\">\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"nowrap\",\r\n                      overflow: \"hidden\",\r\n                      width: \"100%\",\r\n                      textOverflow: \"ellipsis\",\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {/* 著者名 */}\r\n                <Grid item xs={3} className=\"bg-c-pink\">\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"nowrap\",\r\n                      overflow: \"hidden\",\r\n                      width: \"100%\",\r\n                      textOverflow: \"ellipsis\",\r\n                    }}\r\n                  >\r\n                    {item.author}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {/* メモ */}\r\n                <Grid item xs={5} className=\"bg-c-sky\">\r\n                  <TextField id=\"standard-basic\" fullWidth value={item.memo} />\r\n                </Grid>\r\n\r\n                {/* 削除ボタン */}\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={1}\r\n                  className=\"bg-c-pink\"\r\n                  justify=\"center\"\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    size=\"small\"\r\n                    // size=\"medium\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R034Grid;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// material-ui\r\n// BookListレイアウト\r\n\r\n/**\r\n * 適用したいスタイルを定義する\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    // backgroundColor: \"blue\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  h02: {\r\n    // width: \"100%\",\r\n    // paddingLeft: \"1em\",\r\n    // margin: 0,\r\n    // border: \"2 solid\",\r\n    // border: \"1\",\r\n    // backgroundColor: \"blue\",\r\n    // borderRadius: 3,\r\n    height: \"100vh\",\r\n  },\r\n  bookPaper: {\r\n    width: \"100%\",\r\n    paddingLeft: \"1em\",\r\n  },\r\n  btnBookAdd: {\r\n    marginRight: \"0.4em\",\r\n  },\r\n}));\r\n\r\n/**\r\n * tooltip(白)\r\n */\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"1em\",\r\n  },\r\n}))(Tooltip);\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R035Grid = () => {\r\n  const classes = useStyles();\r\n\r\n  function createData(title, author, memo) {\r\n    return { title: title, author: author, memo: memo };\r\n  }\r\n\r\n  const bookRows = [\r\n    createData(\r\n      \"ログ・ホライズン\",\r\n      \"橙乃　ままれままれままれままれままれままれままれ\",\r\n      \"アニメ面白い\"\r\n    ),\r\n    createData(\"あ\", \"い\", \"う\"),\r\n    // createData(\"\", \"\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    // createData(\"水木\", \"真坂　マサル\", \"\"),\r\n    createData(\"水木しげ子さんと結ばれました\", \"真坂　マサル\", \"\"),\r\n    createData(\r\n      \"青い鳥\",\r\n      \"\",\r\n      \"アニメ面白いアニメ面白いアニメ面白いアニメ面白い\"\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Container fixed className=\"\">\r\n        {/* ヘッダ */}\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.title}>\r\n              読みたい本リスト\r\n            </Typography>\r\n            <Button color=\"inherit\">本を追加</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* 見出し */}\r\n        <Paper elevation={1} className={classes.h02}>\r\n          <Grid container className=\"\" justify=\"center\">\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              保存した本\r\n            </Typography>\r\n            {/* </Box> */}\r\n          </Grid>\r\n\r\n          {/* BookList */}\r\n          <Grid container className=\"\">\r\n            {bookRows.map((item, idx) => {\r\n              return (\r\n                <Paper elevation={3} className={classes.bookPaper} key={idx}>\r\n                  <Grid item container alignItems=\"center\">\r\n                    {/* タイトル */}\r\n                    <LightTooltip title={item.title} placement=\"top\">\r\n                      <Grid item xs={3} className=\"\">\r\n                        <div\r\n                          style={{\r\n                            whiteSpace: \"nowrap\",\r\n                            overflow: \"hidden\",\r\n                            width: \"100%\",\r\n                            textOverflow: \"ellipsis\",\r\n                          }}\r\n                        >\r\n                          {item.title}\r\n                        </div>\r\n                      </Grid>\r\n                    </LightTooltip>\r\n\r\n                    {/* 著者名 */}\r\n                    <Grid item xs={3} className=\"\">\r\n                      <div\r\n                        style={{\r\n                          whiteSpace: \"nowrap\",\r\n                          overflow: \"hidden\",\r\n                          width: \"100%\",\r\n                          textOverflow: \"ellipsis\",\r\n                        }}\r\n                      >\r\n                        {item.author}\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    {/* メモ */}\r\n                    <Grid item xs={5} className=\"\">\r\n                      <TextField fullWidth value={item.memo} />\r\n                    </Grid>\r\n\r\n                    {/* 削除ボタン */}\r\n                    <Grid item container xs={1} className=\"\" justify=\"center\">\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        // size=\"small\"\r\n                        size=\"medium\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R035Grid;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport EBData from \"./evangelionBookData.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R080GridList = () => {\r\n  const classes = useStyles();\r\n\r\n  const ebData = EBData;\r\n\r\n  /**\r\n   * 書籍データ抽出\r\n   * @param {*} books\r\n   */\r\n  const extractBooks = (books) => {\r\n    const items = books.items;\r\n    const result = items.map((item) => {\r\n      return {\r\n        title: item.volumeInfo.title,\r\n        author: item.volumeInfo.authors\r\n          ? item.volumeInfo.authors.join(\", \")\r\n          : \"\",\r\n        img: item.volumeInfo.imageLinks\r\n          ? item.volumeInfo.imageLinks.smallThumbnail\r\n          : \"\",\r\n      };\r\n    });\r\n    // console.log(result);\r\n    return result;\r\n  };\r\n\r\n  // const tileData = [\r\n  //   {\r\n  //     img: \"image\",\r\n  //     title: \"Image\",\r\n  //     author: \"author\",\r\n  //   },\r\n  // ];\r\n  const tileData = extractBooks(ebData);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map((tile, idx) => (\r\n          <GridListTile key={idx.toString()}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>by: {tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${tile.title}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R080GridList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EBData from \"./evangelionBookData.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AddCircleOutline, SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    height: 350,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R081GridList = () => {\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * 書籍データ抽出\r\n   * @param {*} books\r\n   */\r\n  const extractBooks = (books) => {\r\n    const items = books.items;\r\n    const result = items.map((item) => {\r\n      return {\r\n        title: item.volumeInfo.title,\r\n        author: item.volumeInfo.authors\r\n          ? item.volumeInfo.authors.join(\", \")\r\n          : \"\",\r\n        img: item.volumeInfo.imageLinks\r\n          ? item.volumeInfo.imageLinks.smallThumbnail\r\n          : \"\",\r\n      };\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 書籍データ\r\n   */\r\n  const bookList = extractBooks(EBData);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container fixed className=\"\">\r\n        <Grid container>\r\n          <Typography variant=\"h6\">検索</Typography>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={8}>\r\n            <div>\r\n              <TextField\r\n                label=\"タイトルで検索\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"著者名で検索\"\r\n                defaultValue=\"\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item container xs={4} justify=\"flex-end\">\r\n            <div>\r\n              <Button variant=\"outlined\" size=\"large\">\r\n                <SearchOutlined /> 検索\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* 書籍List */}\r\n        <Grid container>\r\n          <GridList cellHeight={150} className={classes.gridList}>\r\n            <GridListTile\r\n              key=\"Subheader\"\r\n              cols={2}\r\n              style={{ height: \"auto\" }}\r\n            ></GridListTile>\r\n            {bookList.map((tile, idx) => (\r\n              <GridListTile key={idx.toString()}>\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  subtitle={<span>{tile.author}</span>}\r\n                  actionIcon={\r\n                    <IconButton\r\n                      aria-label={`info about ${tile.title}`}\r\n                      className={classes.icon}\r\n                    >\r\n                      <AddCircleOutline />\r\n                    </IconButton>\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n\r\n    // <div>\r\n    //   <Container fixed className=\"bg-c-lightyellow\">\r\n    //     <p className=\"m22\">Grid Normal</p>\r\n    //     <Grid container>\r\n    //       <Grid item xs={6} className=\"bg-c-sky\">\r\n    //         xs=6\r\n    //       </Grid>\r\n    //       <Grid item xs={6} className=\"bg-c-pink\">\r\n    //         xs=6\r\n    //       </Grid>\r\n    //     </Grid>\r\n    //     <hr />\r\n    //     <Grid container>\r\n    //       <Grid item xs={3} className=\"bg-c-sky\">\r\n    //         xs=3\r\n    //       </Grid>\r\n    //       <Grid item xs={3} className=\"bg-c-pink\">\r\n    //         xs=3\r\n    //       </Grid>\r\n    //       <Grid item xs={3} className=\"bg-c-sky\">\r\n    //         xs=3\r\n    //       </Grid>\r\n    //       <Grid item xs={3} className=\"bg-c-pink\">\r\n    //         xs=3\r\n    //       </Grid>\r\n    //     </Grid>\r\n    //     <hr />\r\n    //   </Container>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default R081GridList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EBData from \"./evangelionBookData.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AddCircleOutline, SearchOutlined } from \"@material-ui/icons\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\n// BookList\r\n// モーダル表示\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    height: 350,\r\n    // paddingTop: 5,\r\n    // marginTop: 5,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[0],\r\n    padding: theme.spacing(1, 1, 1),\r\n  },\r\n}));\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\n/**\r\n * メインレイアウト\r\n */\r\nconst R082GridList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /**\r\n   * 書籍データ抽出\r\n   * @param {*} books\r\n   */\r\n  const extractBooks = (books) => {\r\n    const items = books.items;\r\n    const result = items.map((item) => {\r\n      return {\r\n        title: item.volumeInfo.title,\r\n        author: item.volumeInfo.authors\r\n          ? item.volumeInfo.authors.join(\", \")\r\n          : \"\",\r\n        img: item.volumeInfo.imageLinks\r\n          ? item.volumeInfo.imageLinks.smallThumbnail\r\n          : \"\",\r\n      };\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 書籍データ\r\n   */\r\n  const bookList = extractBooks(EBData);\r\n\r\n  /**\r\n   * 検索欄\r\n   */\r\n  const searchJSX = (\r\n    <Grid container>\r\n      <Grid item xs={8}>\r\n        <div>\r\n          <TextField\r\n            label=\"タイトルで検索\"\r\n            defaultValue=\"\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 8 }}>\r\n          <TextField\r\n            label=\"著者名で検索\"\r\n            defaultValue=\"\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item container xs={4} justify=\"flex-end\">\r\n        <div>\r\n          <Button variant=\"outlined\" size=\"large\">\r\n            <SearchOutlined /> 検索\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  /**\r\n   * 書籍List\r\n   */\r\n  const bookListJSX = (\r\n    <Grid container>\r\n      <GridList cellHeight={120} className={classes.gridList}>\r\n        <GridListTile\r\n          key=\"Subheader\"\r\n          cols={2}\r\n          style={{ height: \"auto\" }}\r\n        ></GridListTile>\r\n        {bookList.map((tile, idx) => (\r\n          <GridListTile key={idx.toString()}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>{tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${tile.title}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <AddCircleOutline />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </Grid>\r\n  );\r\n\r\n  const bodyJSX = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Container fixed className=\"\">\r\n        {/* 検索欄 */}\r\n        {searchJSX}\r\n        {/* 書籍List */}\r\n        {bookListJSX}\r\n      </Container>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {bodyJSX}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R082GridList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import EBData from \"./evangelionBookData.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AddCircleOutline, SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    height: 300,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メイン\r\n */\r\nconst R083GridList = () => {\r\n  const classes = useStyles();\r\n  // 入力値\r\n  const [sWord, setSWord] = useState({ title: \"\", author: \"\" });\r\n  // 書籍\r\n  const [books, setBooks] = useState([]);\r\n\r\n  /**\r\n   * 書籍データから必要な情報を抽出する\r\n   * @param {*} books\r\n   */\r\n  const extractBooks = (books) => {\r\n    const items = books.items;\r\n    const result = items.map((item) => {\r\n      return {\r\n        title: item.volumeInfo.title,\r\n        author: item.volumeInfo.authors\r\n          ? item.volumeInfo.authors.join(\", \")\r\n          : \"\",\r\n        img: item.volumeInfo.imageLinks\r\n          ? item.volumeInfo.imageLinks.smallThumbnail\r\n          : \"\",\r\n      };\r\n    });\r\n    return result;\r\n  };\r\n\r\n  // 書籍データ(テストデータ)\r\n  // const bookList = extractBooks(EBData);\r\n\r\n  /**\r\n   * 検索ボタンクリック\r\n   * @param {*} e\r\n   */\r\n  const handleSearch = (e) => {\r\n    console.log(\"handleSearch\");\r\n    searchExec(sWord.title, sWord.author, 20);\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    setSWord({ ...sWord, title: e.target.value });\r\n  };\r\n  const handleAuthor = (e) => {\r\n    setSWord({ ...sWord, author: e.target.value });\r\n  };\r\n\r\n  /**\r\n   * GET用のURLを生成する\r\n   * @param title\r\n   * @param author\r\n   * @param maxResults\r\n   * @returns\r\n   */\r\n  function buildSearchUrl(title, author, maxResults) {\r\n    // base url\r\n    let url = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n    const conditions = [];\r\n    if (title) {\r\n      // タイトル\r\n      conditions.push(`intitle:${title}`);\r\n    }\r\n    if (author) {\r\n      // 著者\r\n      conditions.push(`inauthor:${author}`);\r\n    }\r\n    return url + conditions.join(\"+\") + `&maxResults=${maxResults}`;\r\n  }\r\n\r\n  /**\r\n   * API発行\r\n   * 検索ボタン押下をトリガーとする\r\n   */\r\n  // useEffect(() => {\r\n  const searchExec = (title, author, maxResults) => {\r\n    // if (isSearching) {\r\n    // URLを生成する\r\n    const url = buildSearchUrl(title, author, maxResults);\r\n    console.log(\"url\", url);\r\n\r\n    // APIを発行する\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((json) => {\r\n        return extractBooks(json);\r\n      })\r\n      .then((books) => {\r\n        setBooks(books);\r\n        console.log(books);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\r\n          \"API発行エラー。GoogleBooksから情報を取得できませんでした。\"\r\n        );\r\n        console.error(err);\r\n      });\r\n    // }\r\n    // 検索済みを設定する\r\n    // setIsSearching(false);\r\n  };\r\n\r\n  /**\r\n   * 検索欄\r\n   */\r\n  const searchJSX = (\r\n    <Grid container>\r\n      <Grid item xs={8}>\r\n        <div>\r\n          <TextField\r\n            label=\"タイトルで検索\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={sWord.title}\r\n            onChange={(e) => handleTitle(e)}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: 8 }}>\r\n          <TextField\r\n            label=\"著者名で検索\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={sWord.author}\r\n            onChange={(e) => handleAuthor(e)}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item container xs={4} justify=\"flex-end\">\r\n        <div>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={(e) => {\r\n              handleSearch(e);\r\n            }}\r\n          >\r\n            <SearchOutlined /> 検索\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  /**\r\n   * 書籍List\r\n   */\r\n  const bookListJSX = (\r\n    <Grid container>\r\n      <GridList cellHeight={100} className={classes.gridList}>\r\n        <GridListTile\r\n          key=\"Subheader\"\r\n          cols={2}\r\n          style={{ height: \"auto\" }}\r\n        ></GridListTile>\r\n        {books.map((tile, idx) => (\r\n          <GridListTile key={idx.toString()}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>{tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${tile.title}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <AddCircleOutline />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container fixed className=\"\">\r\n        <div>API Call</div>\r\n        {/* 検索欄 */}\r\n        {searchJSX}\r\n        {/* 書籍List */}\r\n        {bookListJSX}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R083GridList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AddCircleOutline, SearchOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.6)\",\r\n  },\r\n}));\r\n\r\n/**\r\n * メイン\r\n */\r\nconst R084GridListLocalStrage = () => {\r\n  const classes = useStyles();\r\n  // 入力値\r\n  const [sWord, setSWord] = useState({ title: \"\", author: \"\" });\r\n  // 書籍\r\n  const [books, setBooks] = useState([]);\r\n  // 書籍\r\n  const [bookList, setBookList] = useState([]);\r\n\r\n  /**\r\n   * 書籍データから必要な情報を抽出する\r\n   * @param {*} books\r\n   */\r\n  const extractBooks = (books) => {\r\n    const items = books.items;\r\n    const result = items.map((item) => {\r\n      return {\r\n        title: item.volumeInfo.title,\r\n\r\n        author: item.volumeInfo.authors\r\n          ? item.volumeInfo.authors.join(\", \")\r\n          : \"\",\r\n        img: item.volumeInfo.imageLinks\r\n          ? item.volumeInfo.imageLinks.smallThumbnail\r\n          : \"\",\r\n      };\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * 検索ボタンクリック\r\n   * @param {*} e\r\n   */\r\n  const handleSearch = (e) => {\r\n    searchExec(sWord.title, sWord.author, 20);\r\n  };\r\n\r\n  const handleTitle = (e) => {\r\n    setSWord({ ...sWord, title: e.target.value });\r\n  };\r\n  const handleAuthor = (e) => {\r\n    setSWord({ ...sWord, author: e.target.value });\r\n  };\r\n\r\n  /**\r\n   * GET用のURLを生成する\r\n   * @param title\r\n   * @param author\r\n   * @param maxResults\r\n   * @returns\r\n   */\r\n  function buildSearchUrl(title, author, maxResults) {\r\n    // base url\r\n    let url = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n    const conditions = [];\r\n    if (title) {\r\n      // タイトル\r\n      conditions.push(`intitle:${title}`);\r\n    }\r\n    if (author) {\r\n      // 著者\r\n      conditions.push(`inauthor:${author}`);\r\n    }\r\n    return url + conditions.join(\"+\") + `&maxResults=${maxResults}`;\r\n  }\r\n\r\n  /**\r\n   * API発行\r\n   * 検索ボタン押下をトリガーとする\r\n   */\r\n  // useEffect(() => {\r\n  const searchExec = (title, author, maxResults) => {\r\n    // if (isSearching) {\r\n    // URLを生成する\r\n    const url = buildSearchUrl(title, author, maxResults);\r\n\r\n    // APIを発行する\r\n    fetch(url)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((json) => {\r\n        return extractBooks(json);\r\n      })\r\n      .then((books) => {\r\n        setBooks(books);\r\n        // console.log(books);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\r\n          \"API発行エラー。GoogleBooksから情報を取得できませんでした。\"\r\n        );\r\n        console.error(err);\r\n      });\r\n    // }\r\n    // 検索済みを設定する\r\n    // setIsSearching(false);\r\n  };\r\n\r\n  /**\r\n   * 初期化\r\n   */\r\n  useEffect(() => {\r\n    // TODO: とりあえず検索しておく\r\n    searchExec(\"ドラゴンクエスト\", \"\", 20);\r\n  }, []);\r\n\r\n  // const sessionStrageList = [{ title: \"1つ\" }, { title: \"2つ\" }];\r\n  const [sessionStrageList, setSessionStrageList] = useState([]);\r\n  const R084SessionStrageKey = \"R084SessionStrageKey\";\r\n\r\n  const sessionStrageListJSX = sessionStrageList.map((item, idx) => {\r\n    return (\r\n      <p className=\"m22\" key={idx.toString()}>\r\n        {item.title}\r\n      </p>\r\n    );\r\n  });\r\n\r\n  const handleAddBook = (title) => {\r\n    const newList = [...sessionStrageList, { title: title }];\r\n    setSessionStrageList(newList);\r\n  };\r\n\r\n  const handleLoad = () => {\r\n    const list = sessionStorage.getItem(R084SessionStrageKey);\r\n    if (list) {\r\n      setSessionStrageList(JSON.parse(list));\r\n    }\r\n    // if (storedBooks) {\r\n    //   setBooks(JSON.parse(storedBooks));\r\n    // }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    sessionStorage.setItem(\r\n      R084SessionStrageKey,\r\n      JSON.stringify(sessionStrageList)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 検索欄\r\n   */\r\n  const searchJSX = (\r\n    <Grid container>\r\n      <Grid item xs={8}>\r\n        <div>\r\n          <TextField\r\n            label=\"タイトルで検索\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={sWord.title}\r\n            onChange={(e) => handleTitle(e)}\r\n          />\r\n        </div>\r\n        {/* <div style={{ marginTop: 8 }}>\r\n          <TextField\r\n            label=\"著者名で検索\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={sWord.author}\r\n            onChange={(e) => handleAuthor(e)}\r\n          />\r\n        </div> */}\r\n      </Grid>\r\n      <Grid item container xs={4} justify=\"flex-end\">\r\n        <div>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            onClick={(e) => {\r\n              handleSearch(e);\r\n            }}\r\n          >\r\n            <SearchOutlined /> 検索\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  /**\r\n   * 書籍List\r\n   */\r\n  const bookListJSX = (\r\n    <Grid container>\r\n      <GridList cellHeight={80} className={classes.gridList}>\r\n        <GridListTile\r\n          key=\"Subheader\"\r\n          cols={2}\r\n          style={{ height: \"auto\" }}\r\n        ></GridListTile>\r\n        {books.map((tile, idx) => (\r\n          <GridListTile key={idx.toString()}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>{tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${tile.title}`}\r\n                  className={classes.icon}\r\n                  onClick={() => handleAddBook(tile.title)}\r\n                >\r\n                  <AddCircleOutline />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container fixed className=\"\">\r\n        <div>■LocalStrage(SessionStrage)を使ってみる</div>\r\n        {/* 検索欄 */}\r\n        {searchJSX}\r\n        {/* 書籍List */}\r\n        {bookListJSX}\r\n      </Container>\r\n      <Container fixed className=\"\">\r\n        <h3 className=\"m22\">LocalStrage(SessionStrage)</h3>\r\n        <div>\r\n          <button onClick={handleLoad}>Load</button>\r\n          <button onClick={handleSave}>Save</button>\r\n        </div>\r\n        {sessionStrageListJSX}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default R084GridListLocalStrage;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\n\n// import * as utils from \"./utils/utils\";\nimport R010Main from \"./components/MaterialUi/R010Main\";\nimport R020Main from \"./components/MaterialUi/R020Main\";\nimport R030Main from \"./components/MaterialUi/R030Main\";\nimport R031Main from \"./components/MaterialUi/R031Main\";\nimport R032Main from \"./components/MaterialUi/R032Main\";\nimport R040Main from \"./components/MaterialUi/R040Main\";\nimport R041Main from \"./components/MaterialUi/R041Main\";\nimport R042Main from \"./components/MaterialUi/R042Main\";\nimport R043Main from \"./components/MaterialUi/R043Main\";\nimport R045Main from \"./components/MaterialUi/R045Main\";\nimport TemporaryDrawer from \"./components/MaterialUi/TemporaryDrawer\";\nimport R050Main from \"./components/MaterialUi/R050Main\";\nimport R051Main from \"./components/MaterialUi/R051Main\";\nimport R052Main from \"./components/MaterialUi/R052Main\";\nimport R053Main from \"./components/MaterialUi/R053Main\";\nimport R054Main from \"./components/MaterialUi/R054Main\";\nimport R060Table from \"./components/MaterialUi/R060Table\";\nimport MsgBoardContextProvider from \"./context/ApiMBContext\";\nimport R100MBMain from \"./components/R100MsgBoard/R100MBMain\";\nimport R110Main from \"./components/R110ReactTutorial/R110Main\";\nimport R111Main from \"./components/R111ReactTutorial/R111Main\";\nimport R061Table from \"./components/MaterialUi/R061Table\";\nimport R062Table from \"./components/MaterialUi/R062Table\";\nimport R063Table from \"./components/MaterialUi/R063Table\";\nimport R070Modal from \"./components/MaterialUi/R070Modal\";\nimport R071Modal from \"./components/MaterialUi/R071Modal\";\nimport R072Modal from \"./components/MaterialUi/R072Modal\";\nimport R033Grid from \"./components/MaterialUi/R033Grid\";\nimport R034Grid from \"./components/MaterialUi/R034Grid\";\nimport R035Grid from \"./components/MaterialUi/R035Grid\";\nimport R080GridList from \"./components/MaterialUi/R080GridList\";\nimport R081GridList from \"./components/MaterialUi/R081GridList\";\nimport R082GridList from \"./components/MaterialUi/R082GridList\";\nimport R083GridList from \"./components/MaterialUi/R083GridList\";\nimport R084GridListLocalStrage from \"./components/MaterialUi/R084GridListLocalStrage\";\n\n/**\n * App\n */\nfunction App() {\n  // 画面ID\n  const [scrId, setScrId] = useState(54);\n  // ボタン\n  const [btnState, setBtnState] = useState(scrId);\n  // 画面ID List\n  let scrIds = [\n    { scrId: 10, scrName: \"material-ui button\" },\n    { scrId: 20, scrName: \"container\" },\n    { scrId: 30, scrName: \"Grid layout\" },\n    { scrId: 31, scrName: \"Grid layout\" },\n    { scrId: 32, scrName: \"Grid layout\" },\n    { scrId: 33, scrName: \"Grid BookList\" },\n    { scrId: 34, scrName: \"Grid BookList\" },\n    { scrId: 35, scrName: \"Grid BookList\" },\n    { scrId: 40, scrName: \"Navbar\" },\n    { scrId: 41, scrName: \"Navbar\" },\n    { scrId: 42, scrName: \"Navbar\" },\n    { scrId: 43, scrName: \"Navbar\" },\n    { scrId: 44, scrName: \"TemporaryDrawer\" },\n    { scrId: 45, scrName: \"navbar\" },\n    { scrId: 50, scrName: \"Form item\" },\n    { scrId: 51, scrName: \"Form item\" },\n    { scrId: 52, scrName: \"Fypography\" },\n    { scrId: 53, scrName: \"msgboard mock\" },\n    { scrId: 54, scrName: \"msgboard mock\" },\n    { scrId: 60, scrName: \"Table\" },\n    { scrId: 61, scrName: \"Table\" },\n    { scrId: 62, scrName: \"Table BookList\" },\n    { scrId: 63, scrName: \"Table BookList\" },\n    { scrId: 70, scrName: \"Modal\" },\n    { scrId: 71, scrName: \"Modal\" },\n    { scrId: 72, scrName: \"Modal\" },\n    { scrId: 80, scrName: \"GridList\" },\n    { scrId: 81, scrName: \"GridList BookList\" },\n    { scrId: 82, scrName: \"GridList BookList\" },\n    { scrId: 83, scrName: \"GridList BookList\" },\n    { scrId: 84, scrName: \"GridList BookList LocalStrage\" },\n    { scrId: 90, scrName: \"hoge\" },\n    { scrId: 100, scrName: \"MsgBoard\" },\n    { scrId: 110, scrName: \"React Tutorial\" },\n    { scrId: 111, scrName: \"React Tutorial 2\" },\n    { scrId: 120, scrName: \"hoge\" },\n  ];\n\n  // 画面切り替え\n  const chgScr = (scrId) => {\n    // ボタンステータスにscrIdを設定する\n    setBtnState(scrId);\n    // scrIdを更新する\n    setScrId(scrId);\n  };\n\n  return (\n    <div>\n      {/* change screen */}\n      <div>\n        {scrIds.map((value, idx) => (\n          <button\n            className={classNames(\n              \"scr-btn \",\n              { \"txt-c-333\": btnState === value.scrId },\n              { \"txt-c-aaa\": btnState !== value.scrId },\n              { \"bg-c-sky\": btnState === value.scrId }\n            )}\n            key={idx}\n            onClick={() => chgScr(value.scrId)}\n          >\n            {value.scrId + \" \" + value.scrName}\n          </button>\n        ))}\n      </div>\n      <hr />\n      {scrId === 10 && <R010Main />}\n      {scrId === 20 && <R020Main />}\n      {scrId === 30 && <R030Main />}\n      {scrId === 31 && <R031Main />}\n      {scrId === 32 && <R032Main />}\n      {scrId === 33 && <R033Grid />}\n      {scrId === 34 && <R034Grid />}\n      {scrId === 35 && <R035Grid />}\n      {scrId === 40 && <R040Main />}\n      {scrId === 41 && <R041Main />}\n      {scrId === 42 && <R042Main />}\n      {scrId === 43 && <R043Main />}\n      {scrId === 44 && <TemporaryDrawer />}\n      {scrId === 45 && <R045Main />}\n      {scrId === 50 && <R050Main />}\n      {scrId === 51 && <R051Main />}\n      {scrId === 52 && <R052Main />}\n      {scrId === 53 && <R053Main />}\n      {scrId === 54 && <R054Main />}\n      {scrId === 60 && <R060Table />}\n      {scrId === 61 && <R061Table />}\n      {scrId === 62 && <R062Table />}\n      {scrId === 63 && <R063Table />}\n      {scrId === 70 && <R070Modal />}\n      {scrId === 71 && <R071Modal />}\n      {scrId === 72 && <R072Modal />}\n      {scrId === 80 && <R080GridList />}\n      {scrId === 81 && <R081GridList />}\n      {scrId === 82 && <R082GridList />}\n      {scrId === 83 && <R083GridList />}\n      {scrId === 84 && <R084GridListLocalStrage />}\n      {scrId === 100 && (\n        <MsgBoardContextProvider>\n          <R100MBMain />\n        </MsgBoardContextProvider>\n      )}\n      {scrId === 110 && <R110Main />}\n      {scrId === 111 && <R111Main />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}